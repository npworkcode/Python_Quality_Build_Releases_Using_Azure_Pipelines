name: Azure Pipelines

trigger: none

variables:
- group: Quality_Release_SSH_Info
- name: python.version
  value: '3.7'

pool:
  vmImage: 'ubuntu-latest'
  
stages:

- stage: Build

  jobs:

  - job: Build



    steps:
 



    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/automatedtesting/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
        verbose: true
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi


- stage: Deploy

  jobs:


  - deployment: VMDeploy
    displayName: 'QA for Website'
    environment:
      name: 'QA'
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:


          # SSH Key Needed for VM Admin tasks
          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: $(KNOWN_HOSTS)
              sshPublicKey: '$(aps-tf-public-key)'
              sshPassphrase: '$(aps-passphrase)'
              sshKeySecureFile: 'id_rsa'
            env:
              KNOWN_HOSTS   : $(aps-known-host)



          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'SPSC'
              appType: 'webAppLinux'
              WebAppName: 'python-linux-app'
              deployToSlotOrASE: true
              ResourceGroupName: 'projectrg'
              SlotName: 'production'
              packageForLinux: '$(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip'
              RuntimeStack: 'DOTNETCORE|5.0'
              AppSettings: '-WEBSITE_RUN_FROM_PACKAGE 0'